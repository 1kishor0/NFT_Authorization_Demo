@page "/account"
@rendermode InteractiveServer
@using System.Net.Http
@inject HttpClient _http
@using C1.Blazor.Input
@using C1.Blazor.Core
@using C1.Blazor.Calendar
@using C1.Blazor.DateTimeEditors
@using C1_Blazor_Demo_DotNet8.Models.ViewModels
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
<h3 class="text-center">Bank Account Opening Form</h3>

<EditForm Model="@AccountModel" OnValidSubmit="HandleSubmit" class="form-horizontal p-4 border rounded">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Personal Information Section -->
    <h4 class="text-primary">Personal Information</h4>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="FullName">Full Name</label>
                <InputText id="FullName" class="form-control" @bind-Value="AccountModel.FullName" placeholder="Enter your full name" />
                <ValidationMessage For="@(() => AccountModel.FullName)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Email">Email Address</label>
                <InputText id="Email" type="email" class="form-control" @bind-Value="AccountModel.Email" placeholder="Enter your email" />
                <ValidationMessage For="@(() => AccountModel.Email)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="PhoneNumber">Phone Number</label>
                <InputText id="PhoneNumber" class="form-control" @bind-Value="AccountModel.PhoneNumber" placeholder="Enter your phone number" />
                <ValidationMessage For="@(() => AccountModel.PhoneNumber)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="DateOfBirth">Date of Birth</label>
                <InputDate id="DateOfBirth" class="form-control" @bind-Value="AccountModel.DateOfBirth" />
                <ValidationMessage For="@(() => AccountModel.DateOfBirth)" />
            </div>
        </div>
    </div>

    <!-- Address Information Section -->
    <h4 class="text-primary mt-4">Address Information</h4>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label for="Address">Street Address</label>
                <InputText id="Address" class="form-control" @bind-Value="AccountModel.Address" placeholder="Enter your address" />
                <ValidationMessage For="@(() => AccountModel.Address)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="City">City</label>
                <InputText id="City" class="form-control" @bind-Value="AccountModel.City" placeholder="Enter your city" />
                <ValidationMessage For="@(() => AccountModel.City)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="State">State</label>
                <InputText id="State" class="form-control" @bind-Value="AccountModel.State" placeholder="Enter your state" />
                <ValidationMessage For="@(() => AccountModel.State)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="ZipCode">Zip Code</label>
                <InputText id="ZipCode" class="form-control" @bind-Value="AccountModel.ZipCode" placeholder="Enter your zip code" />
                <ValidationMessage For="@(() => AccountModel.ZipCode)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Country">Country</label>
                <InputText id="Country" class="form-control" @bind-Value="AccountModel.Country" placeholder="Enter your country" />
                <ValidationMessage For="@(() => AccountModel.Country)" />
            </div>
        </div>
    </div>

    <!-- Account Preferences Section -->
    <h4 class="text-primary mt-4">Account Preferences</h4>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="AccountType">Account Type</label>
                <InputSelect id="AccountType" class="form-control" @bind-Value="AccountModel.AccountType">
                    <option value="">Select Account Type</option>
                    <option value="Savings">Savings</option>
                    <option value="Current">Current</option>
                    <option value="Business">Business</option>
                </InputSelect>
                <ValidationMessage For="@(() => AccountModel.AccountType)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="InitialDeposit">Initial Deposit (Amount)</label>
                <InputNumber id="InitialDeposit" class="form-control" @bind-Value="AccountModel.InitialDeposit" placeholder="Enter initial deposit amount" />
                <ValidationMessage For="@(() => AccountModel.InitialDeposit)" />
            </div>
        </div>
    </div>

    <!-- Nominee Information Section -->
    <h4 class="text-primary mt-4">Nominee Information</h4>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="NomineeFullName">Nominee Full Name</label>
                <InputText id="NomineeFullName" class="form-control" @bind-Value="AccountModel.NomineeFullName" placeholder="Enter nominee's full name" />
                <ValidationMessage For="@(() => AccountModel.NomineeFullName)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="NomineeRelationship">Nominee Relationship</label>
                <InputText id="NomineeRelationship" class="form-control" @bind-Value="AccountModel.NomineeRelationship" placeholder="Enter relationship with nominee" />
                <ValidationMessage For="@(() => AccountModel.NomineeRelationship)" />
            </div>
        </div>
    </div>

    <!-- Document Upload Section -->
    <h4 class="text-primary mt-4">Document Upload</h4>
    <div class="form-group">
        <label for="IDProof">Upload ID Proof (Passport/Driver's License)</label>
        <InputFile id="IDProofFile" OnChange="HandleFileUpload" class="form-control-file" />
        @* <ValidationMessage For="@(() => AccountModel.IDProof)" /> *@
    </div>

    <!-- Submit Button -->
    <button type="submit" class="btn btn-success btn-block mt-4">Submit Application</button>
</EditForm>

@code {

    private BankAccountModel AccountModel = new BankAccountModel();
    public string name = string.Empty;
    private string Message;
    private string AlertClass;
    private async Task HandleSubmit()
    {
        try
        {
            var response = await _http.PostAsJsonAsync("api/Dashboard/AccountOpening", AccountModel);


            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<ApiResponse>();
                Message = result?.Message;
                AlertClass = "alert-success";

            }
            else
            {
                Message = "Failed to add customer.";
                AlertClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
            AlertClass = "alert-danger";
        }
    }

 private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
     //   AccountModel.IDProof = file;
        using var memoryStream = new MemoryStream();
        await file.OpenReadStream(maxAllowedSize: 500 * 1024).CopyToAsync(memoryStream); 
        AccountModel.IDProofFile = memoryStream.ToArray();
    }



}
